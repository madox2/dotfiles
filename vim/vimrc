"============= PLUGINS =============
call plug#begin('~/.vim/plugged')
Plug 'bronson/vim-trailing-whitespace' "remove trailing whitespaces
Plug 'scrooloose/nerdtree'
Plug 'vim-scripts/vim-nerdtree_plugin_open' "open files by default app
Plug 'pangloss/vim-javascript' "javascript syntax
Plug 'mxw/vim-jsx' "jsx syntax
Plug 'alvan/vim-closetag' "auto close xml tag
Plug 'jiangmiao/auto-pairs' "auto brackets, quotes, ...
Plug 'mileszs/ack.vim' "find in files
Plug 'kshenoy/vim-signature' "show marks
Plug 'bling/vim-airline' "theme
Plug 'Valloric/YouCompleteMe', { 'dir': '~/.vim/plugged/YouCompleteMe', 'do': './install.sh' } "auto completion support
Plug 'tpope/vim-fugitive' "git plugin
Plug 'elzr/vim-json' "json highlighting, no-js warnings
Plug 'tpope/vim-surround' "change brackets, quotes quickly
Plug 'scrooloose/nerdcommenter' "comment utility
Plug 'tpope/vim-repeat' "improved dot command
Plug 'tpope/vim-unimpaired' "moving through lists
Plug 'Galooshi/vim-import-js' "import utility for js: npm install -g import-js
Plug 'christoomey/vim-tmux-navigator' "seamles tmux-vim navigation ctrl+hjkl
Plug 'godlygeek/tabular' "tabular indentation utils
Plug 'w0rp/ale' "linting, auto fixing engine
Plug 'airblade/vim-gitgutter'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'leafgarland/typescript-vim'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'styled-components/vim-styled-components', { 'branch': 'main' }
call plug#end()

"============= NOTES =============
"
"JS/TS autocompletion
" - install typescript (npm i -g typescript)
" - https://github.com/Valloric/YouCompleteMe#javascript-and-typescript-semantic-completion

"============= PREFERENCES =============
set clipboard^=unnamed,unnamedplus
set hls
set incsearch
set autoindent
set tabstop=2
set shiftwidth=2
set expandtab
set nu
set swapfile
set backupcopy=yes
set dir=~/tmp
set wildignore+=*/player/lib/* "custom ignore files

filetype plugin indent on
let g:nerdtree_plugin_open_cmd = 'xdg-open'
let g:javascript_plugin_jsdoc = 1
let g:jsx_ext_required = 0
let g:closetag_filenames = "*.html,*.xhtml,*.phtml,*.js,*.jsx"
let g:fzf_history_dir = '~/.local/share/fzf-history'
let g:ycm_autoclose_preview_window_after_insertion = 1
let NERDTreeAutoDeleteBuffer = 1
autocmd BufNewFile,BufRead *.md set syntax=markdown
syntax enable
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif " close vim if the only window left open
command! -bang -nargs=* Ag call fzf#vim#ag(<q-args>, {'options': '--delimiter : --nth 4..'}, <bang>0) "don't search filenames with Ag command
command! -bang -nargs=* KB call fzf#vim#ag(<q-args>, extend(fzf#vim#with_preview('right'), {'dir': '~/Dropbox/DEV/kb/'}), <bang>0) "search knowladge base with preview
autocmd VimLeave * call system("xsel -ib", getreg('+')) "prevent clearing clipboard after closing (https://stackoverflow.com/a/9381778/741871)

"============= BINDINGS =============
nmap <Enter> :NERDTreeFind<CR>
nmap <F5> :w<CR>:!node %<CR>
nmap <Space> :Buffers<CR>
nmap <C-@> :Ag<CR>
"go to file on line
nnoremap <leader>f f.gf
nnoremap <leader>ft f.gf
"go to first found style file
nnoremap <leader>s gg:keepp /.css\\|.lessf.gf
nnoremap <leader>st gg:keepp /.css\\|.lessf.gf
"fix `enter` in quickfix list
autocmd BufReadPost quickfix nnoremap <buffer> <CR> <CR>

"imporved default fzf command to exclude ignore files
"https://github.com/junegunn/fzf.vim/issues/121
let $FZF_DEFAULT_COMMAND = 'ag --hidden -g ""'
nmap <C-p> <Esc>:Files<CR>

"============= THEME =============
" Use terminal themes from https://github.com/Mayccoll/Gogh
highlight colorcolumn ctermbg=0
set colorcolumn=80
set t_Co=256
set background=dark

"============= LINTING =============
let g:airline#extensions#ale#enabled = 1
let g:ale_sign_column_always = 1
let g:ale_fix_on_save = 1
let g:ale_linters = {}
let g:ale_linters['javascript'] = ['eslint']
let g:ale_linters['typescript'] = ['tslint', 'tsserver']
let g:ale_fixers = {}
let g:ale_fixers['javascript'] = ['prettier']
let g:ale_fixers['typescript'] = ['tslint', 'prettier']
let g:ale_fixers['scss'] = ['prettier']
let g:ale_fixers['json'] = ['prettier']
"let g:ale_javascript_prettier_options = '--single-quote --trailing-comma es5 --no-semi false'
let g:ale_javascript_prettier_use_local_config = 1
